#!/bin/bash
# Bash Menu Script Example


trap "exit 1" TERM
export TOP_PID=$$

function branchValidity(){
    local is_valid=1
    
    if [ "$1" != "MASTER" ]; then
     	echo -e "\nUnable to create a TAG [✕]\n[REASON] Expected branch: MASTER, Found branch: $1" >&2
     	file_name=$(basename $0)
     	echo -e "\nTerminating script: $file_name" >&2
	echo -e "\n++++++++++++++++++++script terminated successfully++++++++++++++++++++++++++++" >&2
     	is_valid=0
	echo "Goodbye"
	kill -s TERM $TOP_PID

    fi

    echo "$is_valid"
}


function NewDeployment(){

    
    #git tag -a "TMS-SERVICE-V2.2-2019-02-04" <Commit Id> -m "V2.2-2019-02-04 release"
    #git tag -fa latest  <Commit Id> -m "V2.2-2019-02-04 release"
    #git push --tags origin master --force
    #basename `git rev-parse --show-toplevel`
    #git describe --abbrev=0 --tags

    echo -e "This will create a new TAG\nBranch: $1\nSnapshot:$2\n"

}


function RevertToLastSnapShot(){

    echo "Reverting latest TAG to last commit ..."

}


function HotFix(){

    echo "Hotfix"
}


function initScript(){

    branch_snapshot=`sh ~/Documents/bash-script/git-branch.sh`

    branch_name=`echo $branch_snapshot | cut -d '@' -f 1 | tr a-z A-Z`
    commit_hash=`echo $branch_snapshot | cut -d '@' -f 2`
    
    PS3='Please enter your choice: '

    options=("New Deployment" "Revert Latest TAG to last commit" "Hot Fix" "Quit")
    select opt in "${options[@]}"
    do
	case $opt in
            "New Deployment")

		local is_valid_branch=$(branchValidity "$branch_name")
		echo "Is valid branch : $is_valid_branch"
		if (( $is_valid_branch == 0 )); then
		    echo "GIT: Branch verification success [✓]"
		    NewDeployment "$branch_name" "$commit_hash"
		fi
		break
		;;
	    
            "Revert Latest TAG to last commit")
		RevertToLastSnapShot  "$branch_name" "$commit_hash"
		break
		;;
	    
	    "Hot Fix")
		HotFix  "$branch_name" "$commit_hash"
		break
		;;
	    
            "Quit")
		break
		;;
	    
            *) echo "invalid option $REPLY";;
	esac

    done
    
}


echo -e "\n++++++++++++++++++++Script execution started++++++++++++++++++++++++++++\n"

initScript








